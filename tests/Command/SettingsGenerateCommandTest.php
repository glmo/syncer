<?php namespace Syncer\Command;

use Illuminate\Filesystem\Filesystem;
use Illuminate\Support\Facades\File;
use org\bovigo\vfs\vfsStream;
use org\bovigo\vfs\vfsStreamDirectory;
use org\bovigo\vfs\vfsStreamWrapper;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Tester\CommandTester;
use Symfony\Component\Yaml\Exception\ParseException;
use Symfony\Component\Yaml\Parser;


class SettingsGenerateCommandTest extends \PHPUnit_Framework_TestCase {

  protected $movedExistingSettingsFile = FALSE;
  protected $tempSettingsFile;

  public function setUp() {

    vfsStreamWrapper::register();
    vfsStreamWrapper::setRoot(new vfsStreamDirectory('./'));

    $filesystem = new Filesystem();

    if ($filesystem->isFile(SettingsGenerateCommand::SETTINGS_FILE)) {
      $this->movedExistingSettingsFile = TRUE;
      $this->tempSettingsFile = '.tmp.settings.yml.' . time();

      $filesystem->move(SettingsGenerateCommand::SETTINGS_FILE, $this->tempSettingsFile);
    }
  }


  public function testExecuteVerifySettingsFileGetsGenerated() {
    $app = new Application();
    $app->add(new SettingsGenerateCommand());

    $cmd = $app->find('settings:generate');

    $cmdTester = new CommandTester($cmd);

    $cmdTester->execute([]);

    $messageRegex = '/^New Settings File Written/i';
    $this->assertRegExp($messageRegex, $cmdTester->getDisplay());

  }

  /**
   * @depends testExecuteVerifySettingsFileGetsGenerated
   */
  public function testExecuteVerifySettingsFileIsAYamlFile()
  {
    $yml = new Parser();

    $filesystem = new Filesystem();

    if($filesystem->isFile($this->tempSettingsFile)){
      fwrite(STDOUT,"INFO: " . getcwd());
    }else{
      fwrite(STDOUT,"INFO: nah " . getcwd());
    }

  }

  /**
   * {@InheritDoc}
   */
  protected function tearDown() {
    // if there was an existing settings file, we remove it
    if ($this->movedExistingSettingsFile) {
      $filesystem = new Filesystem();
      //remove file generated by our tests
      $filesystem->delete(SettingsGenerateCommand::SETTINGS_FILE);
      //move existing settings file from it's temporary location to where it should be.
      $filesystem->move($this->tempSettingsFile, SettingsGenerateCommand::SETTINGS_FILE);
    }
    parent::tearDown();
  }

}